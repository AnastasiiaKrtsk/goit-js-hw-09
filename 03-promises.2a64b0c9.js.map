{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAAaH,EAAKE,cAAc,uBAChCE,EAAYJ,EAAKE,cAAc,sBAC/BG,EAAcL,EAAKE,cAAc,wBAEvC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbR,EAAKe,iBAAiB,UAAUC,IAC9BA,EAAMC,iBAEN,MAAMC,EAAeC,OAAOhB,EAAWiB,OACjCC,EAAOF,OAAOf,EAAUgB,OACxBE,EAASH,OAAOd,EAAYe,OAElC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IAAK,CAIhCjB,EAHiBiB,EACHL,GAAgBK,EAAI,GAAKF,GAGpCG,MAAKC,IACJC,QAAQC,IACN,uBAAqBF,EAAIlB,eAAoBkB,EAAEjB,UAAe,IAGjEoB,OAAMC,IACLH,QAAQC,IACN,sBAAoBE,EAAItB,eAAmBsB,EAAErB,UAAc,G","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nconst delayInput = form.querySelector('input[name=\"delay\"]');\nconst stepInput = form.querySelector('input[name=\"step\"]');\nconst amountInput = form.querySelector('input[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const initialDelay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n\n  for (let i = 1; i <= amount; i++) {\n    const position = i;\n    const delay = initialDelay + (i - 1) * step;\n\n    createPromise(position, delay)\n      .then(result => {\n        console.log(\n          `✅ Fulfilled promise ${result.position} in ${result.delay}ms`\n        );\n      })\n      .catch(error => {\n        console.log(\n          `❌ Rejected promise ${error.position} in ${error.delay}ms`\n        );\n      });\n  }\n});\n\n// const promisesFormEl = document.querySelector('.form');\n\n// const createPromise = (position, delay) => {\n//   const promise = new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       const shoultResolve = Math.random() > 0.3;\n//       if (shoultResolve) {\n//         resolve({ position, delay });\n//       } else {\n//         reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n//   return promise;\n// };\n\n// const onPromisesFormElSubmit = event => {\n//   event.preventDefault();\n\n//   const amount = Number(event.target.elements.amount.value);\n//   const delay = Number(event.target.elements.delay.value);\n//   const step = Number(event.target.elements.step.value);\n\n//   for (let i = 1; i <= amount; i++) {\n//     createPromise(i, delay)\n//       .then(({ position, delay }) => {\n//         console.log(\n//           `✅ Fulfilled promise ${result.position} in ${result.delay}ms`\n//         );\n//       })\n//       .catch(({ position, delay }) => {\n//         console.log(\n//           `❌ Rejected promise ${error.position} in ${error.delay}ms`\n//         );\n//       });\n//     delay += step;\n//   }\n// };\n\n// promisesFormEl.addEventListener('submit', onPromisesFormElSubmit);\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","initialDelay","Number","value","step","amount","i","then","result","console","log","catch","error"],"version":3,"file":"03-promises.2a64b0c9.js.map"}